diff -Naur a/_tags b/_tags
--- a/_tags	2019-06-14 09:55:03.000000000 +0000
+++ b/_tags	2019-11-21 14:29:33.236981936 +0000
@@ -1,3 +1,3 @@
-true : bin_annot, safe_string
+true : bin_annot, safe_string, package(bytes), package(result)
 <src> : include
 <test> : include
\ No newline at end of file
diff -Naur a/pkg/META b/pkg/META
--- a/pkg/META	2019-06-14 09:55:03.000000000 +0000
+++ b/pkg/META	2019-11-21 14:29:33.236981936 +0000
@@ -1,6 +1,6 @@
 version = "v1.0.4"
 description = "Declarative definition of command line interfaces"
-requires = ""
+requires = "bytes result"
 archive(byte) = "cmdliner.cma"
 archive(native) = "cmdliner.cmxa"
 plugin(byte) = "cmdliner.cma"
diff -Naur a/src/cmdliner.ml b/src/cmdliner.ml
--- a/src/cmdliner.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner.ml	2019-11-21 14:29:33.236981936 +0000
@@ -4,11 +4,12 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+let stdlib_compare = compare
+open Result
+
 module Manpage = Cmdliner_manpage
 module Arg = Cmdliner_arg
 module Term = struct
-  type ('a, 'b) stdlib_result = ('a, 'b) result
-
   include Cmdliner_term
 
   (* Deprecated *)
@@ -112,7 +113,7 @@
     ('a, [ term_escape
          | `Exn of exn * Printexc.raw_backtrace
          | `Parse of string
-         | `Std_help of Manpage.format | `Std_version ]) stdlib_result
+         | `Std_help of Manpage.format | `Std_version ]) Result.result
 
   let run ~catch ei cl f = try (f ei cl :> 'a eval_result) with
   | exn when catch ->
@@ -242,7 +243,7 @@
           Error (Cmdliner_base.err_unknown ~kind:"command" maybe ~hints)
       | `Ambiguous ->
           let ambs = Cmdliner_trie.ambiguities index maybe in
-          let ambs = List.sort compare ambs in
+          let ambs = List.sort stdlib_compare ambs in
           Error (Cmdliner_base.err_ambiguous ~kind:"command" maybe ~ambs)
 
   let eval_choice
diff -Naur a/src/cmdliner.mli b/src/cmdliner.mli
--- a/src/cmdliner.mli	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner.mli	2019-11-21 14:29:33.240979936 +0000
@@ -26,6 +26,8 @@
 
 (** {1:top Interface} *)
 
+open Result
+
 (** Man page specification.
 
     Man page generation is automatically handled by [Cmdliner],
@@ -1373,6 +1375,7 @@
 
 (* Command line interface *)
 
+open Result
 open Cmdliner
 
 let lines =
diff -Naur a/src/cmdliner_arg.ml b/src/cmdliner_arg.ml
--- a/src/cmdliner_arg.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_arg.ml	2019-11-21 14:29:33.240979936 +0000
@@ -6,6 +6,8 @@
 
 let rev_compare n0 n1 = compare n1 n0
 
+open Result
+
 (* Invalid_argument strings **)
 
 let err_not_opt = "Option argument without name"
diff -Naur a/src/cmdliner_arg.mli b/src/cmdliner_arg.mli
--- a/src/cmdliner_arg.mli	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_arg.mli	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,8 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+open Result
+
 (** Command line arguments as terms. *)
 
 type 'a parser = string -> [ `Ok of 'a | `Error of string ]
diff -Naur a/src/cmdliner_base.ml b/src/cmdliner_base.ml
--- a/src/cmdliner_base.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_base.ml	2019-11-21 14:29:33.240979936 +0000
@@ -280,7 +280,7 @@
   in
   parse, print
 
-let env_bool_parse s = match String.lowercase_ascii s with
+let env_bool_parse s = match String.lowercase s with
 | "" | "false" | "no" | "n" | "0" -> `Ok false
 | "true" | "yes" | "y" | "1" -> `Ok true
 | s -> `Error (err_invalid_val s (alts_str ["true"; "yes"; "false"; "no" ]))
diff -Naur a/src/cmdliner_cline.ml b/src/cmdliner_cline.ml
--- a/src/cmdliner_cline.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_cline.ml	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,9 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+let stdlib_compare = compare
+open Result
+
 (* A command line stores pre-parsed information about the command
    line's arguments in a more structured way. Given the
    Cmdliner_info.arg values mentioned in a term and Sys.argv
@@ -119,7 +122,7 @@
           loop (err :: errs) (k + 1) cl pargs args
       | `Ambiguous ->
           let ambs = Cmdliner_trie.ambiguities optidx name in
-          let ambs = List.sort compare ambs in
+          let ambs = List.sort stdlib_compare ambs in
           let err = Cmdliner_base.err_ambiguous "option" name ambs in
           loop (err :: errs) (k + 1) cl pargs args
   in
diff -Naur a/src/cmdliner_cline.mli b/src/cmdliner_cline.mli
--- a/src/cmdliner_cline.mli	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_cline.mli	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,8 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+open Result
+
 (** Command lines. *)
 
 type t
diff -Naur a/src/cmdliner_docgen.ml b/src/cmdliner_docgen.ml
--- a/src/cmdliner_docgen.ml	2019-11-21 14:29:33.193003934 +0000
+++ b/src/cmdliner_docgen.ml	2019-11-21 14:29:33.240979936 +0000
@@ -170,7 +170,7 @@
     | true, true -> (* optional by name *)
         let key names =
           let k = List.hd (List.sort rev_compare names) in
-          let k = String.lowercase_ascii k in
+          let k = String.lowercase k in
           if k.[1] = '-' then String.sub k 1 (String.length k - 1) else k
         in
         compare
@@ -178,8 +178,8 @@
           (key @@ Cmdliner_info.arg_opt_names a1)
     | false, false -> (* positional by variable *)
         compare
-          (String.lowercase_ascii @@ Cmdliner_info.arg_docv a0)
-          (String.lowercase_ascii @@ Cmdliner_info.arg_docv a1)
+          (String.lowercase @@ Cmdliner_info.arg_docv a0)
+          (String.lowercase @@ Cmdliner_info.arg_docv a1)
     | true, false -> -1 (* positional first *)
     | false, true -> 1  (* optional after *)
   in
@@ -310,8 +310,8 @@
 
 let title ei =
   let main = Cmdliner_info.eval_main ei in
-  let exec = String.capitalize_ascii (Cmdliner_info.term_name main) in
-  let name = String.uppercase_ascii (invocation ~sep:'-' ei) in
+  let exec = String.capitalize (Cmdliner_info.term_name main) in
+  let name = String.uppercase (invocation ~sep:'-' ei) in
   let center_header = esc @@ strf "%s Manual" exec in
   let left_footer =
     let version = match Cmdliner_info.term_version main with
diff -Naur a/src/cmdliner_manpage.ml b/src/cmdliner_manpage.ml
--- a/src/cmdliner_manpage.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_manpage.ml	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,8 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+open Result
+
 (* Manpages *)
 
 type block =
diff -Naur a/src/cmdliner_term.ml b/src/cmdliner_term.ml
--- a/src/cmdliner_term.ml	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_term.ml	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,8 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+open Result
+
 type term_escape =
   [ `Error of bool * string
   | `Help of Cmdliner_manpage.format * string option ]
diff -Naur a/src/cmdliner_term.mli b/src/cmdliner_term.mli
--- a/src/cmdliner_term.mli	2019-06-14 09:55:03.000000000 +0000
+++ b/src/cmdliner_term.mli	2019-11-21 14:29:33.240979936 +0000
@@ -4,6 +4,8 @@
    cmdliner v1.0.4
   ---------------------------------------------------------------------------*)
 
+open Result
+
 (** Terms *)
 
 type term_escape =
diff -Naur a/src/dune b/src/dune
--- a/src/dune	2019-06-14 09:55:03.000000000 +0000
+++ b/src/dune	2019-11-21 14:29:33.240979936 +0000
@@ -1,4 +1,5 @@
 (library
  (public_name cmdliner)
+ (libraries result)
  (flags :standard -w -3-6-27-32-35)
  (wrapped false))
