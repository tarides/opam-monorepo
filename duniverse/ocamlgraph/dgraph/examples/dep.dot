digraph G {
  "";
  "-slice-loop-var is set";
  "-inout is set";
  "-sparecode-verbose is set";
  "message_table";
  "-copy is set";
  "contextfree_only_globals";
  " is set";
  "Components.compute";
  "-scg-help";
  "-security-analysis";
  "-continue-annot-error";
  "-orig-name";
  "-dominators-verbose is set";
  "pdg_node lattice_set offsetmap_bitwise G[base] ptmap hashconsing_table 9";
  "-dominators-help is set";
  "-cg-init-func";
  "(bool lattice_base, bool lattice_base) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 10";
  "Cluster_info offsetmaphashconsing_table";
  "(bool lattice_base, bool lattice_base) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 12";
  "-overflow is set";
  "-journal-enable";
  "-occurrence-verbose is set";
  "-slicing-verbose";
  "-unicode";
  "-debug is set";
  "message_counter";
  "-slicing-keep-annotations";
  "-security-help is set";
  "Users";
  "-cg-help is set";
  "big_int lattice_mod G[base] ptmap hashconsing_table 3";
  "-slice-undef-functions is set";
  "-value-debug is set";
  "-sparecode-analysis";
  "-simplify-cfg is set";
  "-no-type";
  "V_Or_Uninitialized offsetmap G[base] ptmap hashconsing_table 6";
  "postdominator";
  "-obfuscate";
  "FileIndex";
  "-slicing-level is set";
  "int  lattice_set offsetmap_bitwise G[base] ptmap hashconsing_table 13";
  "-impact-pragma is set";
  "Components.Nodes";
  "-pdg is set";
  "Dynamic_Alloc_Table";
  "-sparecode-debug is set";
  "-scope-help is set";
  "-security-debug";
  "-input is set";
  "-slice-pragma";
  "Annotations";
  "Components";
  "-quiet is set";
  "-slice-loop-inv is set";
  "-security-verbose is set";
  "-metrics-debug";
  "-dump-dependencies";
  "-slice-assert is set";
  "-value-verbose";
  "-wp-help is set";
  "-cast-from-constant";
  "-inout-debug is set";
  "-cpp-extra-args";
  "FileIndex.compute";
  "-lib-entry";
  "-unspecified-access";
  "-security-annotation";
  "Globals.Vars";
  "-users-verbose";
  "builtin logic functions table";
  "-slice-return";
  "-sparecode-help";
  "-security-analysis is set";
  "-no-obj";
  "-float-digits";
  "-annot";
  "-cg is set";
  "-impact-help is set";
  "-ocode is set";
  "-impact-verbose is set";
  "-users-debug is set";
  "-wp-cfg";
  "-wp-help";
  "-slice-calls";
  "-security-annotation is set";
  "-print";
  "alarms";
  "-constfold is set";
  "-slice-rd";
  "-deps is set";
  "-machdep is set";
  "logic types table";
  "-val is set";
  "UseRelations";
  "-sparecode-help is set";
  "-slice-loop-var";
  "-semantic-const-fold";
  "-main is set";
  "AST";
  "FormalsDecl";
  "-out-external";
  "-wp-cfg is set";
  "-value-help is set";
  "external_inputs";
  "-scope-debug is set";
  "-from-help is set";
  "internal_inouts";
  "-security-lattice is set";
  "-inout-help is set";
  "metrics";
  "-memory-footprint is set";
  "-impact-slicing";
  "-print-path";
  "-scf-help";
  "-metrics-verbose";
  "!Db.Value.compute";
  "-overflow";
  "-semantic-const-fold is set";
  "callwise_from";
  "vid";
  "-verbose";
  "-security-slicing";
  "-input-with-formals is set";
  "-slevel is set";
  "-value-debug";
  "Leaf_Table";
  "-dominators-verbose";
  "-dominators-debug";
  "-semantic-const-folding";
  "-cpp-command";
  "-add-path is set";
  "-val";
  "-slice-calls is set";
  "-unicode is set";
  "-pdg-help";
  "-wp-proof";
  "-slice-value";
  "-help is set";
  "-users-help is set";
  "-scf-help is set";
  "-occurrence-debug is set";
  "-verbose is set";
  "called_functions";
  "-deref";
  "-version is set";
  "Location_Bytes offsetmaphashconsing_table";
  "-cg-verbose";
  "-debug";
  "-ulevel";
  "-context-valid-pointers is set";
  "-keep-switch";
  "-pdg-debug";
  "File.t";
  "Functions";
  "value_table";
  "-load-module is set";
  "-time is set";
  "-security-help";
  "-slicing-debug";
  "-input-with-formals";
  "Buckx.MemoryFootprint";
  "-dump-dependencies is set";
  "-slice-wr is set";
  "-wp-bot is set";
  "-slicing-help";
  "-scg-verbose is set";
  "-occurrence";
  "-cast-from-constant is set";
  "-security-slicing is set";
  "-propagate-top";
  "-ulevel is set";
  "-scg-init-func is set";
  "unit G[base] ptmap hashconsing_table 2";
  "-metrics-debug is set";
  "-journal-name";
  "Pdg.State";
  "internal_outs";
  "-keep-switch is set";
  "-wp-dot is set";
  "((bool lattice_base, bool lattice_base) lattice_product, (bool lattice_base, bool lattice_base) lattice_product) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 11";
  "-typecheck is set";
  "-load-script";
  "builtin logic contructors table";
  "-slicing-debug is set";
  "-wp-builtin-why-file";
  "-pp-annot is set";
  "-no-obj is set";
  "-memory-footprint";
  "-from-debug is set";
  "BuiltinFunctions";
  "CurrentLoc";
  "SCQueue";
  "Binary_cache.MemoryFootprint";
  "-save";
  "-copy";
  "-scf-debug is set";
  "-journal-name is set";
  "-slice-print is set";
  "vglobals";
  "-impact-slicing is set";
  "reachable_stmts";
  "unit G[varinfo] ptmap hashconsing_table 1";
  "-slice-wr";
  "-occurrence-verbose";
  "external_derefs";
  "-slice-value is set";
  "Callers";
  "Mem_Exec";
  "-metrics-dump";
  "-slicing-level";
  "sid";
  "-slicing-help is set";
  "-journal-enable is set";
  "base";
  "Int_Intervals G[base] ptmap hashconsing_table 4";
  "-dominators-debug is set";
  "VarInfos";
  "-safe-arrays";
  "Slicing.Project";
  "Untyped AST";
  "-keep-comments";
  "-metrics-dump is set";
  "-klr is set";
  "-constfold";
  "-sparecode-annot";
  "-mem-exec-all is set";
  "-access-path is set";
  "-inout-verbose is set";
  "SemanticsServicestate";
  "-dot-postdom";
  "-occurrence-debug";
  "external_outs";
  "-context-valid-pointers";
  "logic functions table";
  "-slicing-verbose is set";
  "-load";
  "-metrics-help is set";
  "-wp-dot";
  "-timeout";
  "-context-width is set";
  "-security-lattice";
  "eid";
  "-plevel is set";
  "-inout-debug";
  "!Db.From.compute_all";
  "Sparecode";
  "Widen.Hints";
  "-cg";
  "-main";
  "logic contructors table";
  "-no-type is set";
  "-cpp-command is set";
  "LoopStmts";
  "-slice-assert";
  "-rm-unused-globals";
  "-check";
  "-wp-proof is set";
  "Location_Bytes offsetmap G[base] ptmap hashconsing_table 7";
  "-orig-name is set";
  "-pdg-help is set";
  "-scf-verbose";
  "-rm-unused-globals is set";
  "-slicing-keep-annotations is set";
  "-impact-print";
  "-scg-init-func";
  "-scg";
  "-fct-pdg is set";
  "-mem-exec is set";
  "-load is set";
  "natural_loops";
  "-scf-verbose is set";
  "Components.Annotations";
  "-absolute-valid-range";
  "-context-depth is set";
  "-cg-help";
  "-dot-pdg";
  "-pdg-debug is set";
  "-slice-print";
  "-impact-help";
  "MinValidAbsoluteAddress";
  "-slice-callers";
  "Occurrence.compute";
  "-context-width";
  "-from-help";
  "-from-debug";
  "-slice-return is set";
  "-typecheck";
  "-impact-print is set";
  "-deref is set";
  "is_called";
  "-quiet";
  "-cg-init-func is set";
  "-users-debug";
  "Cluster_info offsetmap G[base] ptmap hashconsing_table 8";
  "external_inouts";
  "-klr";
  "-scg-debug";
  "-wp-verbose";
  "-add-path";
  "-plevel";
  "SGState";
  "-continue-annot-error is set";
  "-save is set";
  "-occurrence is set";
  "-input";
  "-pdg-verbose is set";
  "-help";
  "-wp-bot";
  "-sparecode-debug";
  "-load-script is set";
  "-fct-pdg";
  "-codpds is set";
  "-wp-debug is set";
  "-security-propagate-assertions";
  "-pp-annot";
  "internal derefs";
  "-machdep";
  "-users";
  "-propagate-top is set";
  "-slice-undef-functions";
  "-print-libpath is set";
  "-scf-debug";
  "-deps";
  "-metrics";
  "-scg is set";
  "-occurrence-help";
  "V_Or_Uninitialized offsetmaphashconsing_table";
  "-wp-mm";
  "-users-verbose is set";
  "-timeout is set";
  "-ocode";
  "-print is set";
  "-wlevel is set";
  "-semantic-const-folding is set";
  "-unspecified-access is set";
  "-version";
  "-obfuscate is set";
  "-metrics-verbose is set";
  "-from-verbose";
  "-impact-debug";
  "KF";
  "-cpp-extra-args is set";
  "dominator";
  "internal_inputs";
  "-inout";
  "MaxValidAbsoluteAddress";
  "Occurrences.LastResult";
  "-float-digits is set";
  "Sparecode.Globs.Result";
  "syntactic callgraph";
  "-mem-exec";
  "-out is set";
  "-dot-postdom is set";
  "-check is set";
  "Eval.Got_Imprecise_Value";
  "-value-verbose is set";
  "with_formals_inputs";
  "-print-path is set";
  "-out";
  "-wp-fct";
  "Never_Terminates";
  "-occurrence-help is set";
  "-context-depth";
  "-wp-behav is set";
  "GlobalAnnotations";
  "-wlevel";
  "-calldeps is set";
  "-pdg-verbose";
  "-metrics-help";
  "-slice-threat";
  "-scope-verbose";
  "-annot is set";
  "Non linear assignments";
  "-scg-verbose";
  "-wp-builtin-why-file is set";
  "-keep-comments is set";
  "-simplify-cfg";
  "-slice-loop-inv";
  "-absolute-valid-range is set";
  "-wp-verbose is set";
  "-wp-fct is set";
  "-access-path";
  "-warn-unspecified-order";
  "-users is set";
  "-inout-help";
  "-scope-debug";
  "-out-external is set";
  "-inout-verbose";
  "-pdg";
  "-sparecode-analysis is set";
  "-slevel";
  "-print-plugin-path";
  "-cg-verbose is set";
  "theMachine";
  "-load-module";
  "-users-help";
  "-security-propagate-assertions is set";
  "-metrics is set";
  "-impact-verbose";
  "-slice-rd is set";
  "-scg-help is set";
  "-sparecode-annot is set";
  "-slice-callers is set";
  "builtin logic types table";
  "-security-debug is set";
  "-wp-mm is set";
  "-print-libpath";
  "-security-verbose";
  "Int_Intervals map_lattice offsetmap_bitwise G[base] ptmap hashconsing_table 5";
  "-cg-debug is set";
  "-scg-debug is set";
  "-warn-unspecified-order is set";
  "-impact-debug is set";
  "-wp-debug";
  "-scope-verbose is set";
  "-wp-behav";
  "-value-help";
  "-time";
  "-print-plugin-path is set";
  "-slice-threat is set";
  "-dot-pdg is set";
  "-mem-exec-all";
  "-lib-entry is set";
  "-sparecode-verbose";
  "Occurrences.State";
  "-safe-arrays is set";
  "-codpds";
  "-dominators-help";
  "-scope-help";
  "-slice-pragma is set";
  "-calldeps";
  "-from-verbose is set";
  "Constant_Propagation";
  "-cg-debug";
  "functionwise_from";
  "compinfokey";
  "-impact-pragma";
  
  
  "" -> " is set";
  "" -> "File.t";
  "Components.compute" -> "Components";
  "Components.compute" -> "Components.Nodes";
  "-scg-help" -> "-scg-help is set";
  "-security-analysis" -> "-security-analysis is set";
  "-continue-annot-error" -> "-continue-annot-error is set";
  "-orig-name" -> "-orig-name is set";
  "-cg-init-func" -> "-cg-init-func is set";
  "-journal-enable" -> "-journal-enable is set";
  "-slicing-verbose" -> "-slicing-verbose is set";
  "-unicode" -> "-unicode is set";
  "-slicing-keep-annotations" -> "-slicing-keep-annotations is set";
  "-sparecode-analysis" -> "-sparecode-analysis is set";
  "-no-type" -> "-no-type is set";
  "-obfuscate" -> "-obfuscate is set";
  "FileIndex" -> "FileIndex.compute";
  "-security-debug" -> "-security-debug is set";
  "-slice-pragma" -> "-slice-pragma is set";
  "-metrics-debug" -> "-metrics-debug is set";
  "-dump-dependencies" -> "-dump-dependencies is set";
  "-value-verbose" -> "-value-verbose is set";
  "-cast-from-constant" -> "-cast-from-constant is set";
  "-cpp-extra-args" -> "-cpp-extra-args is set";
  "-cpp-extra-args" -> "File.t";
  "-lib-entry" -> "-lib-entry is set";
  "-lib-entry" -> "contextfree_only_globals";
  "-lib-entry" -> "value_table";
  "-unspecified-access" -> "-unspecified-access is set";
  "-security-annotation" -> "-security-annotation is set";
  "-users-verbose" -> "-users-verbose is set";
  "builtin logic functions table" -> "logic functions table";
  "-slice-return" -> "-slice-return is set";
  "-sparecode-help" -> "-sparecode-help is set";
  "-no-obj" -> "-no-obj is set";
  "-float-digits" -> "-float-digits is set";
  "-annot" -> "-annot is set";
  "-annot" -> "AST";
  "-wp-cfg" -> "-wp-cfg is set";
  "-wp-help" -> "-wp-help is set";
  "-slice-calls" -> "-slice-calls is set";
  "-print" -> "-print is set";
  "-slice-rd" -> "-slice-rd is set";
  "UseRelations" -> "value_table";
  "-slice-loop-var" -> "-slice-loop-var is set";
  "-semantic-const-fold" -> "-semantic-const-fold is set";
  "AST" -> "((bool lattice_base, bool lattice_base) lattice_product, (bool lattice_base, bool lattice_base) lattice_product) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 11";
  "AST" -> "(bool lattice_base, bool lattice_base) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 10";
  "AST" -> "(bool lattice_base, bool lattice_base) lattice_product offsetmap_bitwise G[base] ptmap hashconsing_table 12";
  "AST" -> "Annotations";
  "AST" -> "Cluster_info offsetmap G[base] ptmap hashconsing_table 8";
  "AST" -> "Cluster_info offsetmaphashconsing_table";
  "AST" -> "Components.Annotations";
  "AST" -> "FileIndex";
  "AST" -> "FormalsDecl";
  "AST" -> "Functions";
  "AST" -> "GlobalAnnotations";
  "AST" -> "Globals.Vars";
  "AST" -> "Int_Intervals G[base] ptmap hashconsing_table 4";
  "AST" -> "Int_Intervals map_lattice offsetmap_bitwise G[base] ptmap hashconsing_table 5";
  "AST" -> "KF";
  "AST" -> "Location_Bytes offsetmap G[base] ptmap hashconsing_table 7";
  "AST" -> "Location_Bytes offsetmaphashconsing_table";
  "AST" -> "LoopStmts";
  "AST" -> "Non linear assignments";
  "AST" -> "Occurrences.LastResult";
  "AST" -> "V_Or_Uninitialized offsetmap G[base] ptmap hashconsing_table 6";
  "AST" -> "V_Or_Uninitialized offsetmaphashconsing_table";
  "AST" -> "VarInfos";
  "AST" -> "Widen.Hints";
  "AST" -> "big_int lattice_mod G[base] ptmap hashconsing_table 3";
  "AST" -> "contextfree_only_globals";
  "AST" -> "dominator";
  "AST" -> "int  lattice_set offsetmap_bitwise G[base] ptmap hashconsing_table 13";
  "AST" -> "logic contructors table";
  "AST" -> "logic functions table";
  "AST" -> "logic types table";
  "AST" -> "message_counter";
  "AST" -> "message_table";
  "AST" -> "metrics";
  "AST" -> "natural_loops";
  "AST" -> "pdg_node lattice_set offsetmap_bitwise G[base] ptmap hashconsing_table 9";
  "AST" -> "postdominator";
  "AST" -> "reachable_stmts";
  "AST" -> "syntactic callgraph";
  "AST" -> "unit G[base] ptmap hashconsing_table 2";
  "AST" -> "unit G[varinfo] ptmap hashconsing_table 1";
  "AST" -> "value_table";
  "-out-external" -> "-out-external is set";
  "external_inputs" -> "Slicing.Project";
  "internal_inouts" -> "external_inouts";
  "-impact-slicing" -> "-impact-slicing is set";
  "-print-path" -> "-print-path is set";
  "-scf-help" -> "-scf-help is set";
  "-metrics-verbose" -> "-metrics-verbose is set";
  "-overflow" -> "-overflow is set";
  "-overflow" -> "value_table";
  "-verbose" -> "-verbose is set";
  "-security-slicing" -> "-security-slicing is set";
  "-value-debug" -> "-value-debug is set";
  "-dominators-verbose" -> "-dominators-verbose is set";
  "-dominators-debug" -> "-dominators-debug is set";
  "-semantic-const-folding" -> "-semantic-const-folding is set";
  "-cpp-command" -> "-cpp-command is set";
  "-cpp-command" -> "File.t";
  "-val" -> "-val is set";
  "-pdg-help" -> "-pdg-help is set";
  "-wp-proof" -> "-wp-proof is set";
  "-slice-value" -> "-slice-value is set";
  "-deref" -> "-deref is set";
  "-cg-verbose" -> "-cg-verbose is set";
  "-debug" -> "-debug is set";
  "-ulevel" -> "-ulevel is set";
  "-ulevel" -> "AST";
  "-keep-switch" -> "-keep-switch is set";
  "-keep-switch" -> "AST";
  "-pdg-debug" -> "-pdg-debug is set";
  "File.t" -> "AST";
  "File.t" -> "Untyped AST";
  "value_table" -> "!Db.Value.compute";
  "value_table" -> "Callers";
  "value_table" -> "Constant_Propagation";
  "value_table" -> "Dynamic_Alloc_Table";
  "value_table" -> "Eval.Got_Imprecise_Value";
  "value_table" -> "Leaf_Table";
  "value_table" -> "Mem_Exec";
  "value_table" -> "Never_Terminates";
  "value_table" -> "Occurrences.State";
  "value_table" -> "SGState";
  "value_table" -> "Users";
  "value_table" -> "alarms";
  "value_table" -> "called_functions";
  "value_table" -> "callwise_from";
  "value_table" -> "functionwise_from";
  "value_table" -> "internal derefs";
  "value_table" -> "internal_inouts";
  "value_table" -> "internal_inputs";
  "value_table" -> "internal_outs";
  "value_table" -> "is_called";
  "value_table" -> "vglobals";
  "-security-help" -> "-security-help is set";
  "-slicing-debug" -> "-slicing-debug is set";
  "-input-with-formals" -> "-input-with-formals is set";
  "-slicing-help" -> "-slicing-help is set";
  "-occurrence" -> "-occurrence is set";
  "-propagate-top" -> "-propagate-top is set";
  "-propagate-top" -> "value_table";
  "-journal-name" -> "-journal-name is set";
  "Pdg.State" -> "Components.compute";
  "Pdg.State" -> "Slicing.Project";
  "internal_outs" -> "external_outs";
  "-load-script" -> "-load-script is set";
  "builtin logic contructors table" -> "logic contructors table";
  "-wp-builtin-why-file" -> "-wp-builtin-why-file is set";
  "-memory-footprint" -> "-memory-footprint is set";
  "-memory-footprint" -> "Binary_cache.MemoryFootprint";
  "-memory-footprint" -> "Buckx.MemoryFootprint";
  "-save" -> "-save is set";
  "-copy" -> "-copy is set";
  "-slice-wr" -> "-slice-wr is set";
  "-occurrence-verbose" -> "-occurrence-verbose is set";
  "-metrics-dump" -> "-metrics-dump is set";
  "-slicing-level" -> "-slicing-level is set";
  "-safe-arrays" -> "-safe-arrays is set";
  "-safe-arrays" -> "value_table";
  "-keep-comments" -> "-keep-comments is set";
  "-constfold" -> "-constfold is set";
  "-constfold" -> "AST";
  "-sparecode-annot" -> "-sparecode-annot is set";
  "-dot-postdom" -> "-dot-postdom is set";
  "-occurrence-debug" -> "-occurrence-debug is set";
  "external_outs" -> "Slicing.Project";
  "-context-valid-pointers" -> "-context-valid-pointers is set";
  "-context-valid-pointers" -> "value_table";
  "-load" -> "-load is set";
  "-wp-dot" -> "-wp-dot is set";
  "-timeout" -> "-timeout is set";
  "-security-lattice" -> "-security-lattice is set";
  "-inout-debug" -> "-inout-debug is set";
  "-cg" -> "-cg is set";
  "-main" -> "-main is set";
  "-main" -> "SemanticsServicestate";
  "-main" -> "contextfree_only_globals";
  "-main" -> "value_table";
  "-slice-assert" -> "-slice-assert is set";
  "-rm-unused-globals" -> "-rm-unused-globals is set";
  "-check" -> "-check is set";
  "-scf-verbose" -> "-scf-verbose is set";
  "-impact-print" -> "-impact-print is set";
  "-scg-init-func" -> "-scg-init-func is set";
  "-scg-init-func" -> "SemanticsServicestate";
  "-scg" -> "-scg is set";
  "Components.Annotations" -> "Components.Nodes";
  "Components.Annotations" -> "Components.compute";
  "-absolute-valid-range" -> "-absolute-valid-range is set";
  "-absolute-valid-range" -> "value_table";
  "-cg-help" -> "-cg-help is set";
  "-dot-pdg" -> "-dot-pdg is set";
  "-slice-print" -> "-slice-print is set";
  "-impact-help" -> "-impact-help is set";
  "-slice-callers" -> "-slice-callers is set";
  "-context-width" -> "-context-width is set";
  "-context-width" -> "value_table";
  "-from-help" -> "-from-help is set";
  "-from-debug" -> "-from-debug is set";
  "-typecheck" -> "-typecheck is set";
  "-quiet" -> "-quiet is set";
  "-users-debug" -> "-users-debug is set";
  "-klr" -> "-klr is set";
  "-klr" -> "value_table";
  "-scg-debug" -> "-scg-debug is set";
  "-wp-verbose" -> "-wp-verbose is set";
  "-add-path" -> "-add-path is set";
  "-plevel" -> "-plevel is set";
  "-plevel" -> "value_table";
  "SGState" -> "SCQueue";
  "SGState" -> "SemanticsServicestate";
  "-input" -> "-input is set";
  "-help" -> "-help is set";
  "-wp-bot" -> "-wp-bot is set";
  "-sparecode-debug" -> "-sparecode-debug is set";
  "-fct-pdg" -> "-fct-pdg is set";
  "-security-propagate-assertions" -> "-security-propagate-assertions is set";
  "-pp-annot" -> "-pp-annot is set";
  "-pp-annot" -> "AST";
  "internal derefs" -> "external_derefs";
  "-machdep" -> "-machdep is set";
  "-machdep" -> "theMachine";
  "-users" -> "-users is set";
  "-users" -> "Users";
  "-slice-undef-functions" -> "-slice-undef-functions is set";
  "-scf-debug" -> "-scf-debug is set";
  "-deps" -> "-deps is set";
  "-metrics" -> "-metrics is set";
  "-occurrence-help" -> "-occurrence-help is set";
  "-wp-mm" -> "-wp-mm is set";
  "-ocode" -> "-ocode is set";
  "-version" -> "-version is set";
  "-from-verbose" -> "-from-verbose is set";
  "-impact-debug" -> "-impact-debug is set";
  "internal_inputs" -> "external_inputs";
  "internal_inputs" -> "with_formals_inputs";
  "-inout" -> "-inout is set";
  "-mem-exec" -> "-mem-exec is set";
  "-mem-exec" -> "value_table";
  "-out" -> "-out is set";
  "-wp-fct" -> "-wp-fct is set";
  "-context-depth" -> "-context-depth is set";
  "-context-depth" -> "value_table";
  "-wlevel" -> "-wlevel is set";
  "-wlevel" -> "value_table";
  "-pdg-verbose" -> "-pdg-verbose is set";
  "-metrics-help" -> "-metrics-help is set";
  "-slice-threat" -> "-slice-threat is set";
  "-scope-verbose" -> "-scope-verbose is set";
  "-scg-verbose" -> "-scg-verbose is set";
  "-simplify-cfg" -> "-simplify-cfg is set";
  "-simplify-cfg" -> "AST";
  "-slice-loop-inv" -> "-slice-loop-inv is set";
  "-access-path" -> "-access-path is set";
  "-warn-unspecified-order" -> "-warn-unspecified-order is set";
  "-inout-help" -> "-inout-help is set";
  "-scope-debug" -> "-scope-debug is set";
  "-inout-verbose" -> "-inout-verbose is set";
  "-pdg" -> "-pdg is set";
  "-slevel" -> "-slevel is set";
  "-slevel" -> "value_table";
  "-print-plugin-path" -> "-print-plugin-path is set";
  "theMachine" -> "AST";
  "theMachine" -> "BuiltinFunctions";
  "theMachine" -> "Untyped AST";
  "theMachine" -> "builtin logic contructors table";
  "theMachine" -> "builtin logic functions table";
  "theMachine" -> "builtin logic types table";
  "-load-module" -> "-load-module is set";
  "-users-help" -> "-users-help is set";
  "-impact-verbose" -> "-impact-verbose is set";
  "builtin logic types table" -> "logic types table";
  "-print-libpath" -> "-print-libpath is set";
  "-security-verbose" -> "-security-verbose is set";
  "-wp-debug" -> "-wp-debug is set";
  "-wp-behav" -> "-wp-behav is set";
  "-value-help" -> "-value-help is set";
  "-time" -> "-time is set";
  "-mem-exec-all" -> "-mem-exec-all is set";
  "-mem-exec-all" -> "value_table";
  "-sparecode-verbose" -> "-sparecode-verbose is set";
  "Occurrences.State" -> "Occurrence.compute";
  "Occurrences.State" -> "Occurrences.LastResult";
  "-codpds" -> "-codpds is set";
  "-dominators-help" -> "-dominators-help is set";
  "-scope-help" -> "-scope-help is set";
  "-calldeps" -> "-calldeps is set";
  "-cg-debug" -> "-cg-debug is set";
  "functionwise_from" -> "!Db.From.compute_all";
  "functionwise_from" -> "Pdg.State";
  "-impact-pragma" -> "-impact-pragma is set";
  
  }